import { ContextType } from '../types';
import { escapeChars } from '../utils';
import { KeyboardMarkup } from '../config';
import { useHelpPaymentCallback } from './help/helpPayment';
import { useHelpWithdrawalCallback } from './help/helpWithdrawal';
import { useHelpSettingsCallback } from './help/helpSettings';

const useHelpCommand = async (ctx: ContextType) => {
  const escapedText = escapeChars(`
  –ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫—Ä–æ—Å—Å-–∫—É—Ä—Å *RUB -> THB* —á–µ—Ä–µ–∑ *CNY* –Ω–∞ —Å–Ω—è—Ç–∏–µ/–ø–æ–∫—É–ø–∫—É.
  \n üöÄ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∑–∞–º–µ—á–∞–Ω–∏—è –ø–æ —Ä–∞—Å—á—ë—Ç–∞–º: @dashqa üöÄ
  \n‚ùóÔ∏è–¢–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–∞—Ä—Ç UnionPay –≤ –≤–∞–ª—é—Ç–µ *—é–∞–Ω—å* –±–∞–Ω–∫–∞ *–ì–∞–∑–ø—Ä–æ–º–±–∞–Ω–∫*, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫—É–ø–∞—é—Ç —é–∞–Ω—å —É *–ë—Ä–æ–∫–µ—Ä –ë–∞–Ω–∫ –ì–ü–ë (–ê–û)*.
  \n‚ùóÔ∏è–ù–µ –ø—É—Ç–∞—Ç—å —Å *–ì–∞–∑–ø—Ä–æ–º –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏*‚ùóÔ∏è
  \n –ë–æ—Ç –¥–µ–ª–∞–ª—Å—è –¥–ª—è —Å–µ–±—è, –ø–æ—ç—Ç–æ–º—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–∏–µ –±–∞–Ω–∫–∏/–≤–∞–ª—é—Ç—ã *–Ω–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è*.
  \n\n*–ü–æ–º–æ—â—å –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º:*
  `);

  await ctx.replyWithMarkdown(escapedText, { reply_markup: KeyboardMarkup.help });
};

export {
  useHelpCommand,
  useHelpPaymentCallback,
  useHelpWithdrawalCallback,
  useHelpSettingsCallback,
};
